S1 :- Both in Worker and Master Node 

# using 'sudo su' is not a good practice.
sudo apt update
sudo apt-get install -y apt-transport-https ca-certificates curl
sudo apt install docker.io -y

sudo systemctl enable --now docker # enable and start in single command.

# Adding GPG keys.
curl -fsSL "https://packages.cloud.google.com/apt/doc/apt-key.gpg" | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/kubernetes-archive-keyring.gpg

# Add the repository to the sourcelist.
echo 'deb https://packages.cloud.google.com/apt kubernetes-xenial main' | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt update 
sudo apt install kubeadm=1.20.0-00 kubectl=1.20.0-00 kubelet=1.20.0-00 -y

S2 :- In Master Instance

sudo kubeadm init

S3 :- while running s2 we get some code, code that code are run in master instance - code start with mkdir
       mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

S4 :- kubletl get nodes

S5 :- kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
S6:- sudo kubeadm token create --print-join-command

In Worker Instance 
S7:- sudo kubeadm reset pre-flight checks
S8:- In Master Instance Security group add inbound rule port= 6443

S9:- copy the token from master instance and paste in worker node and write sudo in begnning and --v=5 in last

S10:- kubletl get nodes
